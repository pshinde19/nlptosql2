"1. Perform appropriate JOIN to use multiple tables to answer user's query correctly.",
"2. If the input query does not contains more than two tables to use then don't use join at that time",
"3. Do not use columns of some other table in another table without using appropriate JOIN. For example, If 'ProductName' is required and it's not present in 'Orders' table, first perform appropriate join and then use the 'ProductName' column.",
"4. Perform GROUP BY operation on the correct columns. Do not generate your own columns which is not present in the input. Only use the columns present in the input.",
"5. Whenever 'REVENUE' or 'SALES' are mentioned in user's query calculated them using correct columns from correct tables using the base formula of 'Price per Unit * Number of Units Sold'. Use appropriate columns from one or multiple table to create it.",
"6. Do not create any new information only refer to Table Descriptions and User's Query to get results.",
"7. Give the most Optimized Query. ",
"8. Use more than one tables to answer the query. If Needed",
"9. Use correct date formats for each column wherever provided in the table description.",
"10. Do not generate a stored procedure, generate a mssql query",
"11. Check the Columns from the given tables to identify 'Primary Key' and then Perform joins. Check the relation of the column before joins operation.",
"12. Do not use LIMIT & IN/ALL/ANY/SOME subquery",
"13. Generate some Examples related to Revenue Generation/ Sales if available.",
"14. Provide me the Output only in this Format.'Answer':'SELECT g.genre_name, COUNT(bg.book_id) AS book_count FROM genres g LEFT JOIN book_genres bg ON g.genre_id = bg.genre_id GROUP BY g.genre_id, g.genre_name;"