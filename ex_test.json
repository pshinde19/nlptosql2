[
  "Generate 5 analytical questions and MYSQL queries for them based on the given Database schema -\n\nSTRICTLY FOLLOW THESE INSTRUCTION - \n1. Perform appropriate JOIN to use multiple tables to answer user's query correctly.\n2. Do not use columns of some other table in another table without using appropriate JOIN. For example, If 'ProductName' is required and it's not present in 'Orders' table, first perform appropriate join and then use the 'ProductName' column.\n3. Perform GROUP BY operation on the correct columns.\n4. Whenever 'REVENUE' or 'SALES' are mentioned in user's query calculated them using correct columns from correct tables using the base formula of 'Price per Unit * Number of Units Sold'. Use appropriate columns from one or multiple table to create it.\n5. Do not create any new information only refer to DB Schema, Table Descriptions and User's Query to get results.\n6. Give the most Optimized Query. \n7. Use more than one tables to answer the query. If Needed\n8. Use correct date formats for each column wherever provided in the table description.\n9. Do not generate a stored procedure, generate a MySQL query\n10. Do not use LIMIT & IN/ALL/ANY/SOME subquery\n11. Generate some Examples related to Revenue Generation/ Sales if available.\n\n###################################################\n\nDB SCHEMA - \nCREATE TABLE authors (author_id INT PRIMARY KEY,author_name VARCHAR(255) NOT NULL,birth_date DATE,nationality VARCHAR(50));\nCREATE TABLE books ( book_id INT PRIMARY KEY, title VARCHAR(255) NOT NULL, publication_date DATE, isbn VARCHAR(20) UNIQUE );\nCREATE TABLE genres ( genre_id INT PRIMARY KEY, genre_name VARCHAR(100) NOT NULL );\nCREATE TABLE book_authors ( book_id INT, author_id INT, PRIMARY KEY (book_id, author_id), FOREIGN KEY (book_id) REFERENCES books(book_id), FOREIGN KEY (author_id) REFERENCES authors(author_id) );\nCREATE TABLE book_genres ( book_id INT, genre_id INT, PRIMARY KEY (book_id, genre_id), FOREIGN KEY (book_id) REFERENCES books(book_id), FOREIGN KEY (genre_id) REFERENCES genres(genre_id) );\n\n\nTABLE DESCRIPTIONS:\nTABLE NAME: authors\nauthor_id : Primary key for uniquely identifying authors.\nauthor_name : The name of the author.\nbirth_date : The birth date of the author.\nnationality : The nationality of the author.\n\nTABLE NAME: books\nbook_id : Primary key for uniquely identifying books.\ntitle : The title of the book.\npublication_date : The date when the book was published.\nisbn : The International Standard Book Number (ISBN) of the book, unique to each book.\n\nTABLE NAME: book_authors\nbook_id : Foreign key referencing the book_id in the Books table, establishing a relationship between books and authors.\nauthor_id : Foreign key referencing the author_id in the Authors table, establishing a relationship between books and authors.\n\nTABLE NAME: genres\ngenre_id : Primary key for uniquely identifying genres.\ngenre_name : The name of the genre (e.g., fiction, non-fiction, mystery).\n\nTABLE NAME: book_genres\nbook_id : Foreign key referencing the book_id in the Books table, establishing a relationship between books and genres.\ngenre_id : Foreign key referencing the genre_id in the Genres table, establishing a relationship between books and genres.\n\n\n5 DATA ANALYTIC QUESTIONS AND MYSQL QUERIES- \nINPUT: How many books belong to each genre?\nOUTPUT: SELECT g.genre_name, COUNT(bg.book_id) AS book_count FROM genres g LEFT JOIN book_genres bg ON g.genre_id = bg.genre_id GROUP BY g.genre_id, g.genre_name;\nDescription: This query provides a count of books for each genre in the library.\nTables Used: genres, book_genres\n\nINPUT: Which authors have contributed to the most books?\nOUTPUT: SELECT a.author_name, COUNT(ba.book_id) AS book_count FROM authors a LEFT JOIN book_authors ba ON a.author_id = ba.author_id GROUP BY a.author_id, a.author_name ORDER BY book_count DESC;\nDescription: This query identifies authors with the highest number of contributions to books in the library.\nTables Used: authors, book_authors\n\nINPUT: What are the details of books published in a specific year?\nOUTPUT: SELECT * FROM books WHERE YEAR(publication_date) = 2022;\nDescription: This query retrieves all details of books published in a specific year.\nTables Used: books\n\nINPUT: How many authors from each nationality have books in the library?\nOUTPUT: SELECT a.nationality, COUNT(DISTINCT ba.author_id) AS author_count FROM authors a LEFT JOIN book_authors ba ON a.author_id = ba.author_id GROUP BY a.nationality;\nDescription: This query counts the number of authors from each nationality who have books in the library.\nTables Used: authors, book_authors\n\nINPUT: Find the average age of authors when their books were published?\nOUTPUT: SELECT authors.author_name, AVG(YEAR(books.publication_date) - YEAR(authors.birth_date)) AS avg_author_age FROM authors JOIN book_authors ON authors.author_id = book_authors.author_id JOIN books ON book_authors.book_id = books.book_id GROUP BY authors.author_id, authors.author_name;\nDescription: This query calculates the average age of authors at the time their books were published.\nTables Used: authors, book_authors, books\n\n<end_of_code>\n###################################################\n\nDB SCHEMA - \nCREATE Table 'project' (\n    id (INTEGER),\n    pname (VARCHAR(100)),,\n    PRIMARY KEY (id)\n);\nCREATE Table 'event' (\n    id (INTEGER),\n    title (VARCHAR(200)),\n    start (DATETIME),\n    end (DATETIME),\n    billcategory (VARCHAR(50)),\n    description (TEXT),\n    expense (VARCHAR(50)),\n    amount (INTEGER),\n    file (VARCHAR(100)),\n    expensetype (VARCHAR(100)),\n    hour (INTEGER),,\n    PRIMARY KEY (id)\n);\n\n\nTABLE DESCRIPTIONS:\nTABLE NAME: project\nid : Unique ID assigned to each project from the projects table as primary key\npname : Name of the project\n\nTABLE NAME: event\nid : Unique ID assigned to each event, used to get unique events\ntitle : Title of the event\nstart : Date and time when the event started\nend : Date and time when the event ended\nbillcategory : Category of the event\ndescription : Description of the event\nexpense : Expense incurred by the event\namount : Amount of expense incurred by the event\nfile : File name of the event\nexpensetype : Type of expense incurred by the event\nhour : Hour of the event\n\n6 DATA ANALYTIC QUESTIONS AND MYSQL QUERIES - "
]